{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/todo.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/badge\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/icon\";\n\nfunction ReadAllComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"mat-card\", 6);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-header\");\n    i0.ɵɵelementStart(5, \"mat-card-title\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-card-subtitle\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 7);\n    i0.ɵɵelementStart(10, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ReadAllComponent_div_6_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.finalizar(item_r1);\n    });\n    i0.ɵɵelementStart(11, \"mat-icon\");\n    i0.ɵɵtext(12, \"done\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 9);\n    i0.ɵɵelementStart(14, \"mat-icon\");\n    i0.ɵɵtext(15, \"edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ReadAllComponent_div_6_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.delete(item_r1.id);\n    });\n    i0.ɵɵelementStart(17, \"mat-icon\");\n    i0.ɵɵtext(18, \"delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Data para finalizar: \", item_r1.dataParaFinalizar.toLocaleString(), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r1.titulo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.descricao);\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"update/\", item_r1.id, \"\");\n  }\n}\n\nexport let ReadAllComponent = /*#__PURE__*/(() => {\n  class ReadAllComponent {\n    constructor(service, router) {\n      this.service = service;\n      this.router = router;\n      this.list = [];\n      this.listFinished = [];\n      this.closed = 0;\n    }\n\n    ngOnInit() {\n      this.findAll();\n    }\n    /** Recebe a lista de Todos e insere na list local */\n\n\n    findAll() {\n      this.service.findAll().subscribe(resposta => {\n        resposta.forEach(todo => {\n          if (todo.finalizado) {\n            this.listFinished.push(todo);\n          } else {\n            this.list.push(todo);\n          }\n        });\n        this.closed = this.listFinished.length;\n      });\n    }\n\n    finalizar(item) {\n      item.finalizado = true;\n      this.service.update(item).subscribe(() => {\n        this.service.message(\"Tarefa concluída com sucesso!\");\n        this.list = this.list.filter(todo => todo.id !== item.id); //Tirando da lista local\n\n        this.closed++;\n      });\n    }\n\n    delete(id) {\n      this.service.delete(id).subscribe(resposta => {\n        if (resposta === null) {\n          this.service.message(\"Tarefa deletada com sucesso!\");\n          this.list = this.list.filter(todo => todo.id !== id); //Tirando da lista local\n        } else {\n          this.service.message(\"Tarefa  não deletada!\");\n        }\n      });\n    }\n\n    tarefasFinalizadas() {\n      this.router.navigate(['finalizados']); //Volta para página root\n    }\n\n  }\n\n  ReadAllComponent.ɵfac = function ReadAllComponent_Factory(t) {\n    return new (t || ReadAllComponent)(i0.ɵɵdirectiveInject(i1.TodoService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  ReadAllComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReadAllComponent,\n    selectors: [[\"app-read-all\"]],\n    decls: 7,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"badge\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", 3, \"matBadge\", \"click\"], [\"routerLink\", \"create\", \"mat-stroked-button\", \"\", \"color\", \"primary\"], [\"class\", \"content\", 4, \"ngFor\", \"ngForOf\"], [1, \"content\"], [1, \"mat-elevation-z8\"], [1, \"actions\"], [\"mat-mini-fab\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-mini-fab\", \"\", \"color\", \"accent\", 3, \"routerLink\"], [\"mat-mini-fab\", \"\", \"color\", \"warn\", 3, \"click\"]],\n    template: function ReadAllComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ReadAllComponent_Template_button_click_2_listener() {\n          return ctx.tarefasFinalizadas();\n        });\n        i0.ɵɵtext(3, \"Tarefas finalizadas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 3);\n        i0.ɵɵtext(5, \"Criar Tarefa\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, ReadAllComponent_div_6_Template, 19, 4, \"div\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"matBadge\", ctx.closed);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.list);\n      }\n    },\n    directives: [i3.MatButton, i4.MatBadge, i2.RouterLink, i5.NgForOf, i6.MatCard, i6.MatCardHeader, i6.MatCardTitle, i6.MatCardSubtitle, i7.MatIcon],\n    styles: [\".container[_ngcontent-%COMP%]{width:60%;min-height:85vh;margin:auto}.badge[_ngcontent-%COMP%]{margin-top:2rem;display:flex;justify-content:center;align-items:center}.badge[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:50%;margin:auto 2rem;background-color:#0000001e}.badge[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#fff;background-color:#8a2be2}.content[_ngcontent-%COMP%]{width:100%}mat-card[_ngcontent-%COMP%]{margin-top:.8rem;padding:.2rem}p[_ngcontent-%COMP%]{text-align:end;font-weight:600;color:#906f6f;margin-bottom:0}.actions[_ngcontent-%COMP%]{text-align:end}.actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:.5rem}\"]\n  });\n  return ReadAllComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}